# Use the file format compatible with Docker Compose 3.8
version: "3.8"

services:
  database:
    image: postgres:12.1
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - PSQL_HISTFILE=/distro/log/.psql_history

  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    tmpfs:
      - /tmp

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - BOOTSNAP_CACH_DIR=/usr/local/bundle/_bootsnap
      - WEBPACKER_DEV_SERVER_HOST=webpacker
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - PSQL_HISTFILE=/app/log/.psql_history
    depends_on:
      - database
      - redis

  runner:
    <<: *backend
    entrypoint: ./entrypoints/runner-entrypoint.sh
    ports:
      - '3002:3002'

  rails:
    <<: *backend
    entrypoint: ./entrypoints/docker-entrypoint.sh
    ports:
      - '5050:5050'

  redis:
    image: redis:6.0
    volumes:
      - redis:/data'

  webpacker:
    <<: *app
    ports:
      - '3035:3035'
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
    entrypoint: ./entrypoints/webpacker-entrypoint.sh

  sidekiq:
    <<: *backend
    entrypoint: ./entrypoints/sidekiq-entrypoint.sh

# Declare the volumes that our application uses.
volumes:
  bundle:
  db_data:
  gem_cache:
  node_modules:
  packs:
  rails_cache:
  redis:

